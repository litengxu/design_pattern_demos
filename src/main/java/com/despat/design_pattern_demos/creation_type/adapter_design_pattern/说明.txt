包括两种形式
1. 类适配器：基于继承
    public class Adaptor extend Adaptee implements ITarget
2. 对象适配器：基于组合
     public class Adaptor implements ITarget{
        public Adaptee adaptee;
        public Adaptor(Adaptee adaptee){
            this.adaptee = adaptee;
        }
     }

四个应用场景：
1. 封装有缺陷的接口设计
2. 同意多个类的接口设计
3. 替换依赖的外部系统
4. 兼容老版本的接口
5. 适配不同格式的数据